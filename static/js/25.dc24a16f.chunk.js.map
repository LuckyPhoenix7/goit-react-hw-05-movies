{"version":3,"file":"static/js/25.dc24a16f.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/api.jsx","components/TrendMovies/TrendMovies.styled.jsx","components/TrendMovies/TrendMovies.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ErrorText = styled.p`\n  color: #ff0000;\n\n  text-align: center;\n  margin: 20px 0;\n`;\n\nexport const ErrorLink = styled(Link)`\n  color: #007bff;\n\n  text-decoration: none;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from 'react';\nimport { ErrorText, ErrorLink } from './ErrorMessage.styled';\n\nexport const ErrorMessage = () => {\n  return (\n    <ErrorText>\n      Упс! Что-то пошло не так! Пожалуйста, перезагрузите страницу или перейдите{' '}\n      <ErrorLink to=\"/\">На главную страницу</ErrorLink>\n    </ErrorText>\n  );\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e83fa151a85aa806fd7d4370653073b9';\n\nexport const getTrend = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearch = async query => {\n  const params = {\n    api_key: KEY,\n    query,\n    include_adult: false,\n    language: 'en-US',\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data.results;\n};\n\nexport const getDetails = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}`, { params });\n  return response.data;\n};\n\nexport const getCast = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/credits`, { params });\n  return response.data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/reviews`, { params });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  padding: 0;\n\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  width: 200px;\n\n  text-align: center;\n  overflow: hidden;\n\n  border: 2px solid #007bff;\n  border-radius: 15px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #333;\n\n  text-decoration: none;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n\n  border-radius: 10px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-top: 10px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { getTrend } from 'components/api';\nimport {\n  MoviesList,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './TrendMovies.styled';\nimport toast from 'react-hot-toast';\n\nexport const TrendMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function onFetchTrend() {\n      try {\n        setLoading(true);\n        setError(false);\n\n        await getTrend().then(movies => setTrendMovies([...movies] || []));\n      } catch (error) {\n        setError(true);\n        toast.error('Упс! Что-то пошло не так!');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    onFetchTrend();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <ErrorMessage />}\n\n      <MoviesList>\n        {trendMovies.map(\n          ({ id, original_title, poster_path, release_date }) => (\n            <MovieItem key={id}>\n              <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                <MovieImage\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n                  }\n                  alt={original_title}\n                />\n                <MovieTitle>\n                  {original_title} ({release_date.slice(0, 4)})\n                </MovieTitle>\n              </MovieLink>\n            </MovieItem>\n          )\n        )}\n      </MoviesList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HomePageContainer = styled.div`\n  max-width: 100vw;\n\n  padding: 20px;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n  color: #424242;\n\n  text-align: center;\n  margin-bottom: 30px;\n`;\n","import { TrendMovies } from 'components/TrendMovies/TrendMovies';\nimport { HomePageContainer, Title } from './HomePage.styled';\n\nexport default function HomePage() {\n  return (\n    <HomePageContainer>\n      <Title>Trending today</Title>\n      <TrendMovies />\n    </HomePageContainer>\n  );\n}\n"],"names":["ErrorText","styled","ErrorLink","Link","ErrorMessage","to","axios","KEY","getTrend","response","data","results","getSearch","query","params","api_key","include_adult","language","getDetails","movie_id","getCast","cast","getReviews","MoviesList","MovieItem","MovieLink","MovieImage","MovieTitle","TrendMovies","useState","trendMovies","setTrendMovies","loading","setLoading","error","setError","location","useLocation","useEffect","then","movies","toast","onFetchTrend","Loader","map","id","original_title","poster_path","release_date","state","from","src","alt","slice","HomePageContainer","Title","HomePage"],"sourceRoot":""}