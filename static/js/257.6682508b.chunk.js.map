{"version":3,"file":"static/js/257.6682508b.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/api.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ErrorText = styled.p`\n  color: #ff0000;\n\n  text-align: center;\n  margin: 20px 0;\n`;\n\nexport const ErrorLink = styled(Link)`\n  color: #007bff;\n\n  text-decoration: none;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from 'react';\nimport { ErrorText, ErrorLink } from './ErrorMessage.styled';\n\nexport const ErrorMessage = () => {\n  return (\n    <ErrorText>\n      Упс! Что-то пошло не так! Пожалуйста, перезагрузите страницу или перейдите{' '}\n      <ErrorLink to=\"/\">На главную страницу</ErrorLink>\n    </ErrorText>\n  );\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e83fa151a85aa806fd7d4370653073b9';\n\nexport const getTrend = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearch = async query => {\n  const params = {\n    api_key: KEY,\n    query,\n    include_adult: false,\n    language: 'en-US',\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data.results;\n};\n\nexport const getDetails = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}`, { params });\n  return response.data;\n};\n\nexport const getCast = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/credits`, { params });\n  return response.data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/reviews`, { params });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const DetailsContainer = styled.div`\n  background-color: #fff;\n\n  width: 80vw;\n\n  padding: 20px;\n  margin: 40px auto;\n\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nexport const BackButton = styled.button`\n  background-color: #007bff;\n  color: white;\n\n  padding: 10px 15px;\n\n  border: none;\n  border-radius: 5px;\n\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 300px;\n  height: auto;\n\n  border-radius: 10px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 20px;\n\n  margin-top: 20px;\n`;\n\nexport const MovieTextContainer = styled.div`\n  flex-grow: 1;\n`;\n\nexport const Title = styled.h1`\n  color: #333;\n`;\n\nexport const Subtitle = styled.h2`\n  color: #666;\n`;\n\nexport const Text = styled.p`\n  color: #333;\n`;\n\nexport const GenresList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenreItem = styled.li`\n  display: inline;\n\n  margin-right: 10px;\n`;\n\nexport const AddSection = styled.section`\n  background-color: #f8f8f8;\n\n  text-align: center;\n\n  padding: 20px;\n  margin-top: 30px;\n\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const AddTitle = styled.h3`\n  color: #333;\n\n  margin-bottom: 15px;\n`;\n\nexport const AddList = styled.ul`\n  display: flex;\n  display: inline-flex;\n  gap: 10px;\n\n  padding: 0;\n  list-style: none;\n`;\n\nexport const AddItem = styled.li``;\n\nexport const AddLink = styled(NavLink)`\n  background-color: #e0e0e0;\n  color: #333;\n\n  display: inline-block;\n\n  padding: 10px 15px;\n  text-decoration: none;\n\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  &.active {\n    color: white;\n    background-color: #787878;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getDetails } from 'components/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport {\n  DetailsContainer,\n  BackButton,\n  MovieImage,\n  MovieInfo,\n  Title,\n  Subtitle,\n  Text,\n  GenresList,\n  GenreItem,\n  AddLink,\n  MovieTextContainer,\n  AddSection,\n  AddTitle,\n  AddList,\n  AddItem,\n} from './MovieDetails.styled';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\nimport toast from 'react-hot-toast';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieDetail] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const navigate = useNavigate();\n\n  const onBackLink = () => {\n    navigate(backLinkHref);\n  };\n\n  useEffect(() => {\n    async function onFetchMovie() {\n      try {\n        setLoading(true);\n        setError(false);\n\n        await getDetails(movieId).then(movieDetails =>\n          setMovieDetail(movieDetails)\n        );\n      } catch (error) {\n        setError(true);\n        toast.error('Упс! Что-то пошло не так!');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    onFetchMovie();\n  }, [movieId]);\n\n  if (Object.keys(movieInfo).length === 0) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo;\n\n  return (\n    <DetailsContainer>\n      <BackButton onClick={onBackLink}>\n        <RiArrowGoBackLine size={20} />\n      </BackButton>\n\n      {loading && <Loader />}\n      {error && <ErrorMessage />}\n\n      <MovieInfo>\n        <MovieImage\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n          }\n          alt={original_title}\n        />\n        <MovieTextContainer>\n          <Title>\n            {title} ({release_date.slice(0, 4)})\n          </Title>\n          <Text>User score: {popularity}</Text>\n          <Subtitle>Overview</Subtitle>\n          <Text>{overview}</Text>\n          <Subtitle>Genres</Subtitle>\n          <GenresList>\n            {genres &&\n              genres.map(genre => (\n                <GenreItem key={genre.id}>{genre.name}</GenreItem>\n              ))}\n          </GenresList>\n        </MovieTextContainer>\n      </MovieInfo>\n      <AddSection>\n        <AddTitle>Additional information</AddTitle>\n        <AddList>\n          <AddItem>\n            <AddLink to=\"cast\" state={{ from: location }}>\n              Cast\n            </AddLink>\n          </AddItem>\n          <AddItem>\n            <AddLink to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </AddLink>\n          </AddItem>\n        </AddList>\n      </AddSection>\n      <Outlet />\n    </DetailsContainer>\n  );\n}\n"],"names":["ErrorText","styled","ErrorLink","Link","ErrorMessage","to","axios","KEY","getTrend","response","data","results","getSearch","query","params","api_key","include_adult","language","getDetails","movie_id","getCast","cast","getReviews","DetailsContainer","BackButton","MovieImage","MovieInfo","MovieTextContainer","Title","Subtitle","Text","GenresList","GenreItem","AddSection","AddTitle","AddList","AddItem","AddLink","NavLink","MovieDetails","movieId","useParams","useState","movieInfo","setMovieDetail","loading","setLoading","error","setError","location","useLocation","backLinkHref","state","from","navigate","useNavigate","useEffect","then","movieDetails","toast","onFetchMovie","Object","keys","length","title","release_date","popularity","overview","genres","poster_path","original_title","onClick","size","Loader","src","alt","slice","map","genre","name","id"],"sourceRoot":""}