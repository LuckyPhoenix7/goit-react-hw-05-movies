{"version":3,"file":"static/js/907.4c3fbbae.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.jsx","components/ErrorMessage/ErrorMessage.jsx","components/api.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ErrorText = styled.p`\n  color: #ff0000;\n\n  text-align: center;\n  margin: 20px 0;\n`;\n\nexport const ErrorLink = styled(Link)`\n  color: #007bff;\n\n  text-decoration: none;\n  font-weight: bold;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React from 'react';\nimport { ErrorText, ErrorLink } from './ErrorMessage.styled';\n\nexport const ErrorMessage = () => {\n  return (\n    <ErrorText>\n      Упс! Что-то пошло не так! Пожалуйста, перезагрузите страницу или перейдите{' '}\n      <ErrorLink to=\"/\">На главную страницу</ErrorLink>\n    </ErrorText>\n  );\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'e83fa151a85aa806fd7d4370653073b9';\n\nexport const getTrend = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getSearch = async query => {\n  const params = {\n    api_key: KEY,\n    query,\n    include_adult: false,\n    language: 'en-US',\n  };\n  const response = await axios.get('search/movie', { params });\n  return response.data.results;\n};\n\nexport const getDetails = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}`, { params });\n  return response.data;\n};\n\nexport const getCast = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/credits`, { params });\n  return response.data.cast;\n};\n\nexport const getReviews = async movie_id => {\n  const params = {\n    api_key: KEY,\n    language: 'en-US',\n  };\n  const response = await axios.get(`movie/${movie_id}/reviews`, { params });\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 20px;\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n\n  padding: 10px;\n  margin-right: 10px;\n\n  border-radius: 5px;\n  border: 1px solid #ddd;\n\n  &:focus {\n    border-color: #007bff;\n\n    outline: none;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  background-color: #007bff;\n  color: white;\n\n  padding: 10px 15px;\n  cursor: pointer;\n\n  border: none;\n  border-radius: 5px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { IoSearchOutline } from 'react-icons/io5';\nimport { Form, FormInput, SubmitBtn } from './SearchForm.styled';\nimport toast from 'react-hot-toast';\n\nexport default function SearchForm({ searchMovies }) {\n  const [query, setQuery] = useState('');\n  const navigate = useNavigate();\n\n  const onInputChange = evt => {\n    setQuery(evt.target.value);\n  };\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введите название фильма для поиска!');\n    } else {\n      navigate(`/movies?query=${query.toLowerCase()}`);\n    }\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <FormInput\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={onInputChange}\n      />\n      <SubmitBtn type=\"submit\">\n        <IoSearchOutline size={20} />\n      </SubmitBtn>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n\n  padding: 0;\n\n  list-style: none;\n`;\n\nexport const MovieItem = styled.li`\n  width: 200px;\n\n  text-align: center;\n  overflow: hidden;\n\n  border: 2px solid #007bff;\n  border-radius: 15px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #333;\n\n  text-decoration: none;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: auto;\n\n  border-radius: 10px;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MoviesContainer,\n  MovieItem,\n  MovieLink,\n  MovieImage,\n  MovieTitle,\n} from './MoviesList.styled';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, poster_path, original_title, release_date }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImage\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_title}\n            />\n            <MovieTitle>\n              {original_title} ({release_date.slice(0, 4)})\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MoviesContainer>\n  );\n}\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.main`\n  max-width: 100vw;\n\n  padding: 20px;\n  margin: 0 auto;\n`;\n\nexport const NoResults = styled.p`\n  color: #666;\n\n  text-align: center;\n  margin-top: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { getSearch } from 'components/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage/ErrorMessage';\nimport { MainContainer, NoResults } from './MoviesPage.styled';\nimport toast from 'react-hot-toast';\n\nexport default function MoviesPage() {\n  const [searchParams] = useSearchParams();\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const navigate = useNavigate();\n\n  const searchMovies = query => {\n    navigate(`/movies?query=${query}`);\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      setLoading(true);\n      setError(false);\n\n      getSearch(query)\n        .then(results => {\n          setSearchFilms(results);\n        })\n        .catch(error => {\n          setError(true);\n          toast.error('Упс! Что-то пошло не так!');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [searchParams]);\n\n  return (\n    <MainContainer>\n      <SearchForm searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {error && <ErrorMessage />}\n      {searchFilms.length > 0 ? (\n        <MoviesList movies={searchFilms} />\n      ) : (\n        <NoResults>Введите название фильма для поиска!</NoResults>\n      )}\n    </MainContainer>\n  );\n}\n"],"names":["ErrorText","styled","ErrorLink","Link","ErrorMessage","to","axios","KEY","getTrend","response","data","results","getSearch","query","params","api_key","include_adult","language","getDetails","movie_id","getCast","cast","getReviews","Form","FormInput","SubmitBtn","SearchForm","searchMovies","useState","setQuery","navigate","useNavigate","onSubmit","evt","preventDefault","trim","toast","toLowerCase","type","name","autoFocus","value","onChange","target","size","MoviesContainer","MovieItem","MovieLink","MovieImage","MovieTitle","MoviesList","movies","location","useLocation","map","id","poster_path","original_title","release_date","state","from","src","alt","slice","MainContainer","NoResults","MoviesPage","useSearchParams","searchParams","searchFilms","setSearchFilms","loading","setLoading","error","setError","useEffect","get","then","catch","finally","Loader","length"],"sourceRoot":""}